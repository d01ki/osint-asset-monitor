version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: osint-monitor-db
    environment:
      POSTGRES_USER: ${DB_USER:-osint}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-osint_password}
      POSTGRES_DB: ${DB_NAME:-osint_monitor}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U osint"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Celery and Caching
  redis:
    image: redis:7-alpine
    container_name: osint-monitor-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: osint-monitor-api
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Celery Worker for Background Tasks
  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: osint-monitor-worker
    command: celery -A app.celery_app worker --loglevel=info --concurrency=4
    volumes:
      - ./backend:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - api
    restart: unless-stopped

  # Celery Beat for Scheduled Tasks
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: osint-monitor-beat
    command: celery -A app.celery_app beat --loglevel=info
    volumes:
      - ./backend:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
    restart: unless-stopped

  # Flower - Celery Monitoring Tool
  flower:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: osint-monitor-flower
    command: celery -A app.celery_app flower --port=5555
    ports:
      - "5555:5555"
    env_file:
      - .env
    depends_on:
      - redis
      - celery-worker
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: osint-monitor-network
